name: sh4rk Build Action
run-name: ${{ github.actor }}  Build 

on: [push]

permissions:
  contents: write
  pull-requests: write
  repository-projects: write

jobs:
  BuildMachine:
    name: Init The Runner
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Installing gcc on ${{ runner.os }}
        run: sudo apt install -y gcc

      - name: Checking GCC version
        run: gcc --version

      - name: Checking The Files
        run: ls -la ${{ github.workspace }}

      - name: Creating directory
        run: mkdir -p ${{ github.workspace }}/bin

      - name: Compiling Project ${{ github.repository }} at branch ${{ github.ref }}
        run: gcc ${{ github.workspace }}/main.c -o ${{ github.workspace }}/bin/parser -lm

      - name: Checking Compiled Files
        run: ls -la ${{ github.workspace }}/bin

      - name: Upload Compiled Parser
        uses: actions/upload-artifact@v4
        with:
          name: parser-artifact
          path: ${{ github.workspace }}/bin/parser

      - run: echo "This job's status is ${{ job.status }}."

  ReleaseQuest:
    name: Release the Code
    runs-on: ubuntu-latest
    needs: BuildMachine

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download Parser Artifact
        uses: actions/download-artifact@v4
        with:
          name: parser-artifact
          path: ${{ github.workspace }}/bin

      - name: Verify Downloaded Files
        run: ls -la ${{ github.workspace }}/bin

      - name: Create Release
        id: create-new-release
        uses: actions/create-release@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: 'v1.0'  
          release_name: 'Release v1.0'

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-new-release.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/bin/parser
          asset_name: PEInsight
          asset_content_type: application/bin
